{"version":3,"sources":["module/page/account/redux/constance.js","service/axiosClient.js","service/userApi.js","module/page/account/redux/saga.js","module/page/main/redux/constance.js","service/todoApi.js","module/page/main/redux/saga.js","store/rootSaga.js","module/page/main/redux/reducer.js","module/page/account/redux/reducer.js","common/dialog/redux/constance.js","common/dialog/redux/reducer.js","store/rootReducer.js","store/store.js","assets/images/logo1.png","module/page/account/redux/action.js","style/variable.js","common/nav/MyNavLink.js","constance/nav.js","common/nav/MenuLink.js","layout/left-sidebar/index.js","layout/body-content/style.js","layout/body-content/index.js","common/dialog/redux/action.js","module/page/main/home/style.js","momentCustom.js","common/card/style.js","firebase.js","helper/getKindOfToast.js","common/card/CardTodo.js","module/page/main/home/index.js","module/page/main/redux/action.js","module/page/error/index.js","module/page/account/profile-user/style.js","common/input-file/index.js","module/page/account/profile-user/index.js","module/page/account/sign-in/style.js","module/page/account/sign-in/index.js","module/page/account/sign-up/style.js","module/page/account/sign-up/index.js","constance/routes.js","helper/utilities.js","layout/footer/index.js","assets/images/profile-user/bg-image-1.png","assets/images/profile-user/bg-image-2.png","assets/images/profile-user/bg-image-3.png","assets/images/profile-user/bg-image-4.png","assets/images/profile-user/bg-image-5.png","assets/images/profile-user/bg-image-6.png","layout/index.js","router/PrivateRoute.js","router/WrapRouter.js","common/toast/index.js","common/loading/index.js","common/dialog/component/style.js","common/dialog/component/DialogAddTask.js","common/dialog/component/DialogEditTask.js","common/dialog/component/DialogControl.js","App.js","reportWebVitals.js","index.js"],"names":["typeUser","axios","create","baseURL","process","signUp","payload","axiosClient","post","signIn","signOut","token","myHeader","headers","Authorization","updateUser","put","uploadUserImage","formData","signInSaga","signUpSaga","updateUserSage","updateImageSaga","signOutSaga","actionWatcherUser","call","account","response","status","type","data","error","message","informationUser","takeLatest","typeTodoList","getAllTasks","get","updateTask","idTask","endpoint","removeTask","delete","addTask","getAllTasksSaga","createNewTaskSaga","removeTaskSaga","updateTaskSaga","actionWatcherTodoList","bodyTask","newTask","_id","taskUpdate","rootSaga","all","initialState","tasks","request","storeTodoList","state","action","filter","task","map","item","isAuthenticated","storeUser","user","typeDialog","isOpen","kindOfDialog","storeDialog","rootReducer","combineReducers","todoList","dialog","persistConfig","key","storage","whitelist","myPersistReducer","persistReducer","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","persistor","persistStore","run","actionClearUserType","backgroundColorWhite","borderGrayColor","titleColorGray","primaryColor","makeStyles","theme","root","fontWeight","margin","active","color","MyNavLink","MenuLink","display","flexDirection","justifyContent","height","padding","boxSizing","marginBottom","bottomSideBar","marginLeft","notification","profileAva","backgroundColor","width","spacing","LeftSidebar","bodyContentStyle","them","parent","sidebar","minHeight","background","BodyContent","props","classes","Box","className","children","actionCloseDialog","styleHome","body","flexWrap","titleShape","marginTop","marginRight","borderRadius","border","fontSize","buttonAdd","position","right","bottom","boxShadow","pagination","moment","locale","relativeTime","future","past","s","m","mm","h","hh","d","dd","M","MM","y","yy","styleCard","parentCard","minWidth","maxWidth","time","bullet","transform","pos","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","DATABASE_NAME","getKindOfToast","isSuccessful","includes","mess","getMessStatus","toast","success","CardTodo","title","description","createdAt","completed","updatedAt","isDisplayRemoveButton","isDisplayEditButton","isDisplayDoneDraftButton","dispatch","useDispatch","timeToFromNow","useSelector","fromNow","handleRemoveTodo","a","updateDoc","doc","removed","handleEditTodo","Card","variant","CardContent","Typography","component","CardActions","Button","size","onClick","typeAction","actionOpenDialogEditTask","Home","typeToastOfTodoList","useState","isOpenSidebar","setIsOpenSidebar","tabIndex","setTabIndex","todos","setTodos","checkCompletedTodo","isComplete","checkRemovedTodo","isRemoved","useEffect","q","query","collection","onSnapshot","querySnapshot","todosQuery","forEach","push","id","handleCloseSidebar","Tabs","value","onChange","event","newValue","indicatorColor","textColor","centered","Tab","label","index","IconButton","aria-label","NotFound","userProfileStyle","colorTitle","buttonSave","wrapperUploadForm","alignItems","wrapperButtonUpload","FileUploader","setSelectedFile","hiddenFileInput","React","useRef","startIcon","current","click","reader","FileReader","onload","document","getElementById","src","result","readAsDataURL","target","files","ref","style","UserProfile","history","useHistory","typeToastUser","inputNameRef","inputEmailRef","inputPasswordRef","inputPasswordConfirmRef","selectedFile","clearUserType","useCallback","alt","TextField","defaultValue","name","inputRef","email","password","actionUpdateUser","FormData","append","actionUpdateImage","alert","signInStyle","boxSignIn","subTitle1","subTitle2","textDecoration","gitHubButton","linkedInButton","facebookButton","submitButton","signInForm","SignIn","location","useLocation","isError","setIsError","logo","gutterBottom","helperText","v","test","disabled","to","signUpStyle","boxSignUp","SignUp","publicRoutes","path","exact","privateRoutes","getRandomNumber","min","max","Math","floor","random","Footer","LayoutBody","listBackground","bg1","bg2","bg3","bg4","bg5","bg6","backgroundImg","setBackgroundImg","interval","setInterval","randomIndex","length","clearInterval","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","PrivateRoute","Component","rest","render","pathname","WrapRouter","MyToast","typeTodo","configPositionToast","autoClose","transition","Flip","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","LoadingIcon","isLoadingUser","isLoadingTodo","isLoading","styleLoading","wrapperLoading","left","top","iconLoading","CircularProgress","styleDialog","formDialog","DialogAddTask","inputDescriptionRef","handleClose","handleAddTodo","newTodo","Date","now","addDoc","DialogTitle","onClose","DialogContent","dividers","fullWidth","DialogActions","taskUpdated","DialogControl","Dialog","aria-labelledby","open","DialogEditTask","showBodyDialog","App","loading","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.020b4dc5.chunk.js","sourcesContent":["const SIGN_IN = 'SIGN_IN';\r\nconst SIGN_IN_SUCCEEDED = 'SIGN_IN_SUCCEEDED';\r\nconst SIGN_IN_FAILED = 'SIGN_IN_FAILED';\r\nconst SIGN_OUT = 'SIGN_OUT';\r\nconst SIGN_OUT_SUCCEEDED = 'SIGN_OUT_SUCCEEDED';\r\nconst SIGN_OUT_FAILED = 'SIGN_OUT_FAILED';\r\nconst SIGN_UP = 'SIGN_UP';\r\nconst SIGN_UP_SUCCEEDED = 'SIGN_UP_SUCCEEDED';\r\nconst SIGN_UP_FAILED = 'SIGN_UP_FAILED';\r\nconst UPDATE_USER = 'UPDATE_USER';\r\nconst UPDATE_USER_SUCCEEDED = 'UPDATE_USER_SUCCEEDED';\r\nconst UPDATE_USER_FAILED = 'UPDATE_USER_FAILED ';\r\nconst UPDATE_PROFILE_USER = 'UPDATE_PROFILE_USER';\r\nconst CLEAR_TYPE_USER = 'CLEAR_TYPE_USER';\r\n\r\nexport const typeUser = {\r\n  SIGN_IN,\r\n  SIGN_IN_SUCCEEDED,\r\n  SIGN_IN_FAILED,\r\n  SIGN_OUT,\r\n  SIGN_OUT_SUCCEEDED,\r\n  SIGN_OUT_FAILED,\r\n  SIGN_UP,\r\n  SIGN_UP_SUCCEEDED,\r\n  SIGN_UP_FAILED,\r\n  UPDATE_USER,\r\n  UPDATE_USER_SUCCEEDED,\r\n  UPDATE_USER_FAILED,\r\n  CLEAR_TYPE_USER,\r\n  UPDATE_PROFILE_USER,\r\n};\r\n","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: process.env.REACT_APP_BASE_URL,\r\n});\r\n","import axiosClient from 'service/axiosClient';\r\n\r\nexport const signUp = (payload) => {\r\n  let endpoint = '/user/register';\r\n  return axiosClient.post(endpoint, payload);\r\n};\r\nexport const signIn = (payload) => {\r\n  let endpoint = '/user/login';\r\n  return axiosClient.post(endpoint, payload);\r\n};\r\nexport const signOut = (token) => {\r\n  let endpoint = '/user/logout';\r\n  let myHeader = {\r\n    headers: {\r\n      Authorization: token,\r\n    },\r\n  };\r\n  return axiosClient.post(endpoint, {}, myHeader);\r\n};\r\nexport const updateUser = (payload, token) => {\r\n  let endpoint = '/user/me';\r\n  let myHeader = {\r\n    headers: {\r\n      Authorization: token,\r\n    },\r\n  };\r\n  return axiosClient.put(endpoint, payload, myHeader);\r\n};\r\nexport const uploadUserImage = (formData, token) => {\r\n  let endpoint = '/user/me/avatar';\r\n  let myHeader = {\r\n    headers: {\r\n      Authorization: token,\r\n    },\r\n  };\r\n  return axiosClient.post(endpoint, formData, myHeader);\r\n};\r\nexport const getUserImage = (idUser) => {\r\n  let endpoint = `/user/${idUser}/avatar`;\r\n\r\n  return axiosClient.get(endpoint);\r\n};\r\n","import { put, takeLatest, call } from 'redux-saga/effects';\r\n//internal modules\r\nimport { typeUser } from 'module/page/account/redux/constance';\r\nimport {\r\n  signIn,\r\n  signUp,\r\n  updateUser,\r\n  signOut,\r\n  uploadUserImage,\r\n} from 'service/userApi';\r\n\r\nfunction* signInSaga(payload) {\r\n  try {\r\n    let response = yield call(signIn, payload.account);\r\n    if (response.status === 200) {\r\n      yield put({\r\n        type: typeUser.SIGN_IN_SUCCEEDED,\r\n        data: response.data,\r\n      });\r\n    } else {\r\n      yield put({\r\n        type: typeUser.SIGN_IN_FAILED,\r\n        error: 'Do not know',\r\n      });\r\n    }\r\n  } catch (error) {\r\n    yield put({\r\n      type: typeUser.SIGN_IN_FAILED,\r\n      error: error.message,\r\n    });\r\n  }\r\n}\r\nfunction* signUpSaga(payload) {\r\n  try {\r\n    let response = yield call(signUp, payload.account);\r\n    if (response.status === 201) {\r\n      yield put({\r\n        type: typeUser.SIGN_UP_SUCCEEDED,\r\n      });\r\n    } else {\r\n      yield put({\r\n        type: typeUser.SIGN_UP_FAILED,\r\n        error: 'Do not know signUpSaga',\r\n      });\r\n    }\r\n  } catch (error) {\r\n    yield put({\r\n      type: typeUser.SIGN_UP_FAILED,\r\n      error: error.message,\r\n    });\r\n  }\r\n}\r\nfunction* updateUserSage(payload) {\r\n  try {\r\n    let { token, informationUser } = payload;\r\n    const response = yield call(updateUser, informationUser, token);\r\n    if (response.status === 200) {\r\n      yield put({\r\n        type: typeUser.UPDATE_USER_SUCCEEDED,\r\n        data: response.data.data,\r\n      });\r\n    } else {\r\n      yield put({\r\n        type: typeUser.UPDATE_USER_FAILED,\r\n      });\r\n    }\r\n  } catch (error) {\r\n    yield put({\r\n      type: typeUser.UPDATE_USER_FAILED,\r\n      error: error.message,\r\n    });\r\n  }\r\n}\r\nfunction* updateImageSaga(payload) {\r\n  let { formData, token } = payload;\r\n  yield call(uploadUserImage, formData, token);\r\n}\r\nfunction* signOutSaga(payload) {\r\n  try {\r\n    const response = yield call(signOut, payload.token);\r\n    if (response.status === 200) {\r\n      yield put({\r\n        type: typeUser.SIGN_OUT_SUCCEEDED,\r\n      });\r\n    } else {\r\n      yield put({\r\n        type: typeUser.SIGN_OUT_FAILED,\r\n      });\r\n    }\r\n  } catch (error) {\r\n    yield put({\r\n      type: typeUser.SIGN_OUT_FAILED,\r\n      error: error.message,\r\n    });\r\n  }\r\n}\r\n\r\nexport function* actionWatcherUser() {\r\n  yield takeLatest(typeUser.SIGN_IN, signInSaga);\r\n  yield takeLatest(typeUser.SIGN_UP, signUpSaga);\r\n  yield takeLatest(typeUser.UPDATE_USER, updateUserSage);\r\n  yield takeLatest(typeUser.UPDATE_PROFILE_USER, updateImageSaga);\r\n  yield takeLatest(typeUser.SIGN_OUT, signOutSaga);\r\n}\r\n","const GET_TASK = 'GET_TASK';\r\nconst GET_TASK_SUCCEEDED = 'GET_TASK_SUCCEEDED';\r\nconst GET_TASK_FAILED = 'GET_TASK_FAILED';\r\nconst GET_ALL_TASKS = 'GET_ALL_TASKS';\r\nconst GET_ALL_TASKS_SUCCEEDED = 'GET_ALL_TASKS_SUCCEEDED';\r\nconst GET_ALL_TASKS_FAILED = 'GET_ALL_TASKS_FAILED';\r\nconst REMOVE_TASK = 'REMOVE_TASK';\r\nconst REMOVE_TASK_SUCCEEDED = 'REMOVE_TASK_SUCCEEDED';\r\nconst REMOVE_TASK_FAILED = 'REMOVE_TASK_FAILED';\r\nconst UPDATE_TASK = 'UPDATE_TASK';\r\nconst UPDATE_TASK_SUCCEEDED = 'UPDATE_TASK_SUCCEEDED';\r\nconst UPDATE_TASK_FAILED = 'UPDATE_TASK_FAILED';\r\nconst ADD_TASK = 'ADD_TASK';\r\nconst ADD_TASK_SUCCEEDED = 'ADD_TASK_SUCCEEDED';\r\nconst ADD_TASK_FAILED = 'ADD_TASK_FAILED';\r\nconst CLEAR_TYPE_TODO_LIST = 'CLEAR_TYPE_TODO_LIST';\r\n\r\nexport const typeTodoList = {\r\n  GET_TASK,\r\n  GET_TASK_SUCCEEDED,\r\n  GET_ALL_TASKS,\r\n  GET_TASK_FAILED,\r\n  GET_ALL_TASKS_SUCCEEDED,\r\n  GET_ALL_TASKS_FAILED,\r\n  REMOVE_TASK,\r\n  REMOVE_TASK_SUCCEEDED,\r\n  REMOVE_TASK_FAILED,\r\n  UPDATE_TASK,\r\n  UPDATE_TASK_SUCCEEDED,\r\n  UPDATE_TASK_FAILED,\r\n  ADD_TASK,\r\n  ADD_TASK_SUCCEEDED,\r\n  ADD_TASK_FAILED,\r\n  CLEAR_TYPE_TODO_LIST,\r\n};\r\n","import axiosClient from 'service/axiosClient';\r\n\r\nexport const getTask = (idTask, token) => {\r\n  let endpoint = `/task/${idTask}`;\r\n  let myHeader = {\r\n    headers: {\r\n      Authorization: token,\r\n    },\r\n  };\r\n  return axiosClient.get(endpoint, myHeader);\r\n};\r\nexport const getAllTasks = (token) => {\r\n  let endpoint = '/task';\r\n  let myHeader = {\r\n    headers: {\r\n      Authorization: token,\r\n    },\r\n  };\r\n  return axiosClient.get(endpoint, myHeader);\r\n};\r\n\r\nexport const updateTask = (idTask, payload, token) => {\r\n  let endpoint = `/task/${idTask}`;\r\n  let myHeader = {\r\n    headers: {\r\n      Authorization: token,\r\n    },\r\n  };\r\n  return axiosClient.put(endpoint, payload, myHeader);\r\n};\r\n\r\nexport const removeTask = (idTask, token) => {\r\n  let endpoint = `/task/${idTask}`;\r\n  let myHeader = {\r\n    headers: {\r\n      Authorization: token,\r\n    },\r\n  };\r\n  return axiosClient.delete(endpoint, myHeader);\r\n};\r\n\r\nexport const addTask = (payload, token) => {\r\n  let endpoint = '/task';\r\n  let myHeader = {\r\n    headers: {\r\n      Authorization: token,\r\n    },\r\n  };\r\n  return axiosClient.post(endpoint, payload, myHeader);\r\n};\r\n","import { put, takeLatest, call } from 'redux-saga/effects';\r\n//internal modules\r\nimport { typeTodoList } from 'module/page/main/redux/constance';\r\nimport { getAllTasks, addTask, removeTask, updateTask } from 'service/todoApi';\r\n\r\nfunction* getAllTasksSaga(payload) {\r\n  try {\r\n    let response = yield call(getAllTasks, payload.token);\r\n    if (response.status === 200) {\r\n      yield put({\r\n        type: typeTodoList.GET_ALL_TASKS_SUCCEEDED,\r\n        data: response.data.data,\r\n      });\r\n    } else {\r\n      yield put({\r\n        type: typeTodoList.GET_ALL_TASKS_FAILED,\r\n        error: 'get all tasks fail',\r\n      });\r\n    }\r\n  } catch (error) {\r\n    yield put({\r\n      type: typeTodoList.GET_ALL_TASKS_FAILED,\r\n      error: error.message,\r\n    });\r\n  }\r\n}\r\nfunction* createNewTaskSaga(payload) {\r\n  try {\r\n    let response = yield call(addTask, payload.bodyTask, payload.token);\r\n    if (response.status === 201) {\r\n      yield put({\r\n        type: typeTodoList.ADD_TASK_SUCCEEDED,\r\n        newTask: response.data.data,\r\n      });\r\n    } else {\r\n      yield put({\r\n        type: typeTodoList.ADD_TASK_FAILED,\r\n        error: 'err create new task',\r\n      });\r\n    }\r\n  } catch (error) {\r\n    yield put({\r\n      type: typeTodoList.ADD_TASK_FAILED,\r\n      error: error.message,\r\n    });\r\n  }\r\n}\r\nfunction* removeTaskSaga(payload) {\r\n  try {\r\n    let response = yield call(removeTask, payload.idTask, payload.token);\r\n    if (response.status === 200) {\r\n      yield put({\r\n        type: typeTodoList.REMOVE_TASK_SUCCEEDED,\r\n        _id: payload.idTask,\r\n      });\r\n    } else {\r\n      yield put({\r\n        type: typeTodoList.REMOVE_TASK_FAILED,\r\n        error: 'remove task Saga',\r\n      });\r\n    }\r\n  } catch (error) {\r\n    yield put({\r\n      type: typeTodoList.REMOVE_TASK_FAILED,\r\n      error: error.message,\r\n    });\r\n  }\r\n}\r\nfunction* updateTaskSaga(payload) {\r\n  try {\r\n    let { idTask, taskUpdate, token } = payload;\r\n    let response = yield call(updateTask, idTask, taskUpdate, token);\r\n    if (response.status === 200) {\r\n      yield put({\r\n        type: typeTodoList.UPDATE_TASK_SUCCEEDED,\r\n        _id: idTask,\r\n        taskUpdate: response.data.data,\r\n      });\r\n    } else {\r\n      yield put({\r\n        type: typeTodoList.UPDATE_TASK_FAILED,\r\n        error: 'updateTaskSaga error',\r\n      });\r\n    }\r\n  } catch (error) {\r\n    yield put({\r\n      type: typeTodoList.UPDATE_TASK_FAILED,\r\n      error: error.message,\r\n    });\r\n  }\r\n}\r\n\r\nexport function* actionWatcherTodoList() {\r\n  yield takeLatest(typeTodoList.GET_ALL_TASKS, getAllTasksSaga);\r\n  yield takeLatest(typeTodoList.ADD_TASK, createNewTaskSaga);\r\n  yield takeLatest(typeTodoList.REMOVE_TASK, removeTaskSaga);\r\n  yield takeLatest(typeTodoList.UPDATE_TASK, updateTaskSaga);\r\n}\r\n","import { all } from 'redux-saga/effects';\r\nimport { actionWatcherUser } from 'module/page/account/redux/saga';\r\nimport { actionWatcherTodoList } from 'module/page/main/redux/saga';\r\n\r\nexport default function* rootSaga() {\r\n  yield all([actionWatcherUser(), actionWatcherTodoList()]);\r\n}\r\n","import { typeTodoList } from 'module/page/main/redux/constance';\r\nimport { typeUser } from 'module/page/account/redux/constance';\r\nconst initialState = {\r\n  tasks: null,\r\n  request: false,\r\n  type: null,\r\n  error: null,\r\n};\r\n\r\nconst storeTodoList = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    // handle for fetch tasks\r\n    case typeTodoList.GET_ALL_TASKS:\r\n      return {\r\n        ...state,\r\n        request: true,\r\n      };\r\n    case typeTodoList.GET_ALL_TASKS_SUCCEEDED:\r\n      return {\r\n        ...state,\r\n        request: false,\r\n        tasks: action.data,\r\n        type: typeTodoList.GET_ALL_TASKS_SUCCEEDED,\r\n        error: null,\r\n      };\r\n    case typeTodoList.GET_ALL_TASKS_FAILED:\r\n      return {\r\n        ...state,\r\n        request: false,\r\n        type: typeTodoList.GET_ALL_TASKS_FAILED,\r\n        error: action.error,\r\n      };\r\n    // handle for create new task\r\n    case typeTodoList.ADD_TASK:\r\n      return {\r\n        ...state,\r\n        request: true,\r\n      };\r\n    case typeTodoList.ADD_TASK_SUCCEEDED:\r\n      return {\r\n        ...state,\r\n        request: false,\r\n        tasks: [...state.tasks, action.newTask],\r\n        type: typeTodoList.ADD_TASK_SUCCEEDED,\r\n        error: null,\r\n      };\r\n    case typeTodoList.ADD_TASK_FAILED:\r\n      return {\r\n        ...state,\r\n        request: false,\r\n        type: typeTodoList.ADD_TASK_FAILED,\r\n        error: action.error,\r\n      };\r\n    //handle remove task\r\n    case typeTodoList.REMOVE_TASK:\r\n      return {\r\n        ...state,\r\n        request: true,\r\n      };\r\n    case typeTodoList.REMOVE_TASK_SUCCEEDED:\r\n      return {\r\n        ...state,\r\n        request: false,\r\n        tasks: state.tasks.filter((task) => task._id !== action._id),\r\n        type: typeTodoList.REMOVE_TASK_SUCCEEDED,\r\n        error: null,\r\n      };\r\n    case typeTodoList.REMOVE_TASK_FAILED:\r\n      return {\r\n        ...state,\r\n        request: false,\r\n        type: typeTodoList.REMOVE_TASK_FAILED,\r\n        error: action.error,\r\n      };\r\n    //handle update task\r\n    case typeTodoList.UPDATE_TASK:\r\n      return {\r\n        ...state,\r\n        request: true,\r\n      };\r\n    case typeTodoList.UPDATE_TASK_SUCCEEDED:\r\n      return {\r\n        ...state,\r\n        request: false,\r\n        tasks: state.tasks.map((item) =>\r\n          item._id === action._id ? (item = action.taskUpdate) : item\r\n        ),\r\n        type: typeTodoList.UPDATE_TASK_SUCCEEDED,\r\n        error: null,\r\n      };\r\n    case typeTodoList.UPDATE_TASK_FAILED:\r\n      return {\r\n        ...state,\r\n        request: false,\r\n        type: typeTodoList.UPDATE_TASK_FAILED,\r\n        error: action.error,\r\n      };\r\n    //clear type\r\n    case typeTodoList.CLEAR_TYPE_TODO_LIST:\r\n      return {\r\n        ...state,\r\n        type: null,\r\n      };\r\n    //clear tasks when system sign out\r\n    case typeUser.SIGN_OUT_SUCCEEDED:\r\n      return (state = initialState);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default storeTodoList;\r\n","import { typeUser } from 'module/page/account/redux/constance';\r\n\r\nconst initialState = {\r\n  token: null,\r\n  data: null,\r\n  request: false,\r\n  isAuthenticated: false,\r\n  type: null,\r\n  error: null,\r\n};\r\n\r\nconst storeUser = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    //handle for sign in\r\n    case typeUser.SIGN_IN:\r\n      return {\r\n        ...state,\r\n        request: true,\r\n      };\r\n    case typeUser.SIGN_IN_SUCCEEDED:\r\n      return {\r\n        ...state,\r\n        token: action.data.token,\r\n        data: action.data.user,\r\n        request: false,\r\n        isAuthenticated: true,\r\n        type: typeUser.SIGN_IN_SUCCEEDED,\r\n      };\r\n    case typeUser.SIGN_IN_FAILED:\r\n      return {\r\n        ...state,\r\n        data: null,\r\n        request: false,\r\n        isAuthenticated: false,\r\n        type: typeUser.SIGN_IN_FAILED,\r\n        error: action.error,\r\n      };\r\n    //handle for sign up\r\n    case typeUser.SIGN_UP:\r\n      return {\r\n        ...state,\r\n        request: true,\r\n      };\r\n    case typeUser.SIGN_UP_SUCCEEDED:\r\n      return {\r\n        ...state,\r\n        request: false,\r\n        type: typeUser.SIGN_UP_SUCCEEDED,\r\n      };\r\n    case typeUser.SIGN_UP_FAILED:\r\n      return {\r\n        ...state,\r\n        request: false,\r\n        type: typeUser.SIGN_UP_FAILED,\r\n        error: action.error,\r\n      };\r\n    //handle for update user\r\n    case typeUser.UPDATE_USER:\r\n      return {\r\n        ...state,\r\n        request: true,\r\n      };\r\n    case typeUser.UPDATE_USER_SUCCEEDED:\r\n      return {\r\n        ...state,\r\n        request: false,\r\n        data: action.data,\r\n        type: typeUser.UPDATE_USER_SUCCEEDED,\r\n      };\r\n    case typeUser.UPDATE_USER_FAILED:\r\n      return {\r\n        ...state,\r\n        request: false,\r\n        type: typeUser.UPDATE_USER_FAILED,\r\n      };\r\n    //handle for sign out\r\n    case typeUser.SIGN_OUT:\r\n      return {\r\n        ...state,\r\n        request: true,\r\n      };\r\n    case typeUser.SIGN_OUT_SUCCEEDED:\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        data: null,\r\n        request: false,\r\n        isAuthenticated: false,\r\n        type: typeUser.SIGN_OUT_SUCCEEDED,\r\n        error: null,\r\n      };\r\n    case typeUser.SIGN_OUT_FAILED:\r\n      return {\r\n        ...state,\r\n        type: typeUser.SIGN_OUT_FAILED,\r\n        error: action.error,\r\n      };\r\n    //clear reducer\r\n    case typeUser.CLEAR_TYPE_USER:\r\n      return {\r\n        ...state,\r\n        type: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default storeUser;\r\n","const OPEN_DIALOG = 'OPEN_DIALOG';\r\nconst CLOSE_DIALOG = 'CLOSE_DIALOG';\r\nconst ADD_TASK_DIALOG = 'ADD_TASK_DIALOG';\r\nconst EDIT_TASK_DIALOG = 'EDIT_TASK_DIALOG';\r\n\r\nexport const typeDialog = {\r\n  OPEN_DIALOG,\r\n  CLOSE_DIALOG,\r\n  ADD_TASK_DIALOG,\r\n  EDIT_TASK_DIALOG,\r\n};\r\n","import { typeDialog } from 'common/dialog/redux/constance';\r\n\r\nconst initialState = {\r\n  isOpen: false,\r\n  kindOfDialog: null,\r\n  state: null,\r\n};\r\n\r\nconst storeDialog = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case typeDialog.OPEN_DIALOG:\r\n      return {\r\n        ...state,\r\n        isOpen: true,\r\n        kindOfDialog: action.kindOfDialog,\r\n        state: action.state,\r\n      };\r\n    case typeDialog.CLOSE_DIALOG:\r\n      return (state = initialState);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default storeDialog;\r\n","import { combineReducers } from 'redux';\r\nimport todoList from 'module/page/main/redux/reducer';\r\nimport user from 'module/page/account/redux/reducer';\r\nimport dialog from 'common/dialog/redux/reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  todoList,\r\n  user,\r\n  dialog,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from 'redux';\r\n// import influence file Saga\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from 'store/rootSaga';\r\n// library for connect Vscode store redux with google Chorme\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from 'store/rootReducer';\r\n// redux persist\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage: storage,\r\n  whitelist: ['user'],\r\n  // stateReconciler: autoMergeLevel2\r\n};\r\nconst myPersistReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(\r\n  myPersistReducer,\r\n  // link Vscode store redux with google Chorme\r\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\r\n);\r\nconst persistor = persistStore(store);\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport { store, persistor };\r\n","export default __webpack_public_path__ + \"static/media/logo1.ef15cafb.png\";","import { typeUser } from 'module/page/account/redux/constance';\r\n\r\nexport const actionSignIn = (account) => ({\r\n  type: typeUser.SIGN_IN,\r\n  account,\r\n});\r\nexport const actionSignUp = (account) => ({\r\n  type: typeUser.SIGN_UP,\r\n  account,\r\n});\r\nexport const actionUpdateUser = (informationUser, token) => ({\r\n  type: typeUser.UPDATE_USER,\r\n  informationUser,\r\n  token,\r\n});\r\nexport const actionUpdateImage = (formData, token) => ({\r\n  type: typeUser.UPDATE_PROFILE_USER,\r\n  formData,\r\n  token,\r\n});\r\nexport const actionSignOut = (token) => ({\r\n  type: typeUser.SIGN_OUT,\r\n  token,\r\n});\r\nexport const actionClearUserType = () => ({\r\n  type: typeUser.CLEAR_TYPE_USER,\r\n});\r\nexport const mockActionSignInSuccess = () => ({\r\n  type: typeUser.SIGN_IN_SUCCEEDED,\r\n  data: {\r\n    token: '1',\r\n    user: 'mock',\r\n  },\r\n});\r\n","export const backgroundColorLightGray = '#f5f7fa';\r\nexport const backgroundColorWhite = '#ffffff';\r\nexport const borderGrayColor = '#e5e7eb';\r\nexport const titleColorGray = 'rgb(97, 97, 97)';\r\nexport const primaryColor = '#3f51b5';\r\n","import React from 'react';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n//internal modules\r\nimport { actionSignOut } from 'module/page/account/redux/action';\r\n// import { navLinkStyle } from 'common/nav/style';\r\n//material-ui component\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { primaryColor } from 'style/variable';\r\n\r\nexport const navLinkStyle = makeStyles((theme) => ({\r\n  root: {\r\n    fontWeight: '600',\r\n    margin: '2px',\r\n  },\r\n  active: {\r\n    color: primaryColor,\r\n  },\r\n}));\r\n\r\nfunction MyNavLink(props) {\r\n  // STATE\r\n  const { id, icon, path, children, isActive, ...rest } = props;\r\n  const classes = navLinkStyle();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { token } = useSelector((state) => state.user);\r\n\r\n  //METHOD\r\n  const handleClick = () => {\r\n    if (path === '/logout') {\r\n      dispatch(actionSignOut(token));\r\n    } else {\r\n      history.push(path);\r\n    }\r\n  };\r\n  return (\r\n    <Button\r\n      className={`${classes.root} ${isActive && classes.active}`}\r\n      startIcon={icon}\r\n      // onClick={handleClick}\r\n      onClick={() => handleClick(id)}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n}\r\nexport default MyNavLink;\r\n","//material-ui icon\r\nimport DynamicFeedIcon from '@material-ui/icons/DynamicFeed';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\nexport const listNavLink = [\r\n  {\r\n    id: 1,\r\n    title: 'Todo',\r\n    path: '/',\r\n    icon: <DynamicFeedIcon />,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Account',\r\n    path: '/userProfile',\r\n    icon: <AccountBoxIcon />,\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Logout',\r\n    path: '/logout',\r\n    icon: <ExitToAppIcon />,\r\n  },\r\n];\r\n","import React from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n// internal modules\r\nimport MyNavLink from 'common/nav/MyNavLink';\r\nimport { listNavLink } from 'constance/nav';\r\n\r\nfunction MenuLink() {\r\n  const location = useLocation();\r\n  const endpoint = location.pathname;\r\n\r\n  return (\r\n    <div>\r\n      {listNavLink.map((item, index) => {\r\n        let isActive = item.path === endpoint;\r\n        return (\r\n          <MyNavLink key={index} isActive={isActive} {...item}>\r\n            {item.title}\r\n          </MyNavLink>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MenuLink;\r\n","import React, { useEffect, useState } from 'react';\r\n// internal modules\r\nimport logo from 'assets/images/logo1.png';\r\nimport MenuSidebar from 'common/nav/MenuLink';\r\n// import { leftSidebarStyle } from 'layout/left-sidebar/style';\r\nimport { getUserImage } from 'service/userApi';\r\n//material-ui component\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Box from '@material-ui/core/Box';\r\nimport Badge from '@material-ui/core/Badge';\r\n//material-ui icon\r\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { primaryColor } from 'style/variable';\r\n\r\nexport const leftSidebarStyle = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n    height: '100%',\r\n    padding: '30px 20px',\r\n    boxSizing: 'border-box',\r\n    '& img': {\r\n      marginBottom: 20,\r\n    },\r\n  },\r\n  bottomSideBar: {\r\n    marginLeft: '20px',\r\n  },\r\n  notification: {\r\n    margin: '5px 20%',\r\n    display: 'inline-block',\r\n  },\r\n  profileAva: {\r\n    margin: '0 10%',\r\n    backgroundColor: primaryColor,\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n    '& img': {\r\n      marginBottom: 0,\r\n    },\r\n  },\r\n}));\r\n\r\nfunction LeftSidebar() {\r\n  let classes = leftSidebarStyle();\r\n  const [src, setSrc] = useState(null);\r\n\r\n  const getImage = () => {\r\n    getUserImage('605452a21a4f9d0017e35d6c')\r\n      .then((baseImage) => {\r\n        setSrc(baseImage.request);\r\n      })\r\n      .catch((err) => null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getImage();\r\n  }, []);\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Box>\r\n        <img src={logo} alt=\"hi\" height=\"40px\" width=\"150px\" />\r\n        <MenuSidebar />\r\n      </Box>\r\n      <Box className={classes.bottomSideBar}>\r\n        <Badge\r\n          className={classes.notification}\r\n          badgeContent={4}\r\n          color=\"primary\"\r\n        >\r\n          <NotificationsActiveIcon />\r\n        </Badge>\r\n        <Avatar\r\n          className={classes.profileAva}\r\n          src={src && src.responseURL}\r\n          alt=\"avatar\"\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default LeftSidebar;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport { backgroundColorLightGray } from 'style/variable.js';\r\n\r\nexport const bodyContentStyle = makeStyles((them) => ({\r\n  parent: {\r\n    // display: 'grid',\r\n    // gridTemplateColumns: 'minmax(150px, 15%) 1fr',\r\n    // padding: 0,\r\n    // margin: 0,\r\n  },\r\n  sidebar: {\r\n    minHeight: '100vh',\r\n    background: backgroundColorLightGray,\r\n  },\r\n}));\r\n","import React from 'react';\r\n// internal module\r\nimport LeftSidebar from 'layout/left-sidebar';\r\nimport { bodyContentStyle } from 'layout/body-content/style';\r\n// material-UI components\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction BodyContent(props) {\r\n  const classes = bodyContentStyle();\r\n  return (\r\n    <Box className={classes.parent}>\r\n      {/* <Box className={classes.sidebar}>\r\n        <LeftSidebar />\r\n      </Box> */}\r\n      <Box>{props.children}</Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default BodyContent;\r\n","import { typeDialog } from 'common/dialog/redux/constance';\r\n\r\nexport const actionOpenDialogAddTask = () => ({\r\n  type: typeDialog.OPEN_DIALOG,\r\n  kindOfDialog: typeDialog.ADD_TASK_DIALOG,\r\n});\r\n\r\nexport const actionOpenDialogEditTask = (payload, typeAction) => ({\r\n  type: typeDialog.OPEN_DIALOG,\r\n  kindOfDialog: typeDialog.EDIT_TASK_DIALOG,\r\n  state: payload,\r\n});\r\n\r\nexport const actionCloseDialog = () => ({\r\n  type: typeDialog.CLOSE_DIALOG,\r\n});\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  backgroundColorWhite,\r\n  borderGrayColor,\r\n  titleColorGray,\r\n} from 'style/variable';\r\n//buttonAdd, body, titleShape\r\nexport const styleHome = makeStyles({\r\n  body: {\r\n    padding: '0 10px',\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n\r\n  titleShape: {\r\n    padding: '30px 10px',\r\n    marginTop: 5,\r\n    marginRight: 5,\r\n    borderRadius: 5,\r\n    border: `1px solid ${borderGrayColor}`,\r\n    backgroundColor: backgroundColorWhite,\r\n    '& > h3': {\r\n      color: titleColorGray,\r\n      fontWeight: '600',\r\n      fontSize: '18px',\r\n    },\r\n  },\r\n  buttonAdd: {\r\n    position: 'fixed',\r\n    right: '20px',\r\n    bottom: '25px',\r\n    borderRadius: '50% 50%',\r\n    backgroundColor: '#f3f4ff',\r\n    boxShadow: '10px 10px 10px #c7c7c7',\r\n  },\r\n  pagination: {\r\n    '& .MuiPagination-ul': {\r\n      justifyContent: 'center',\r\n      margin: 40,\r\n    },\r\n  },\r\n});\r\n","import moment from 'moment';\r\n\r\nmoment.locale('vi', {\r\n  // months:\r\n  //   'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split(\r\n  //     '_'\r\n  //   ),\r\n  // monthsShort:\r\n  //   'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\r\n  // monthsParseExact: true,\r\n  // weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\r\n  // weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\r\n  // weekdaysMin: 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),\r\n  // weekdaysParseExact: true,\r\n  // longDateFormat: {\r\n  //   LT: 'HH:mm',\r\n  //   LTS: 'HH:mm:ss',\r\n  //   L: 'DD/MM/YYYY',\r\n  //   LL: 'D MMMM YYYY',\r\n  //   LLL: 'D MMMM YYYY HH:mm',\r\n  //   LLLL: 'dddd D MMMM YYYY HH:mm',\r\n  // },\r\n  // calendar: {\r\n  //   sameDay: '[Aujourd’hui à] LT',\r\n  //   nextDay: '[Demain à] LT',\r\n  //   nextWeek: 'dddd [à] LT',\r\n  //   lastDay: '[Hier à] LT',\r\n  //   lastWeek: 'dddd [dernier à] LT',\r\n  //   sameElse: 'L',\r\n  // },\r\n  relativeTime: {\r\n    future: 'còn %s',\r\n    past: 'quá %s',\r\n    s: 'vài giây',\r\n    m: 'một phút',\r\n    mm: '%d phút',\r\n    h: 'một giờ',\r\n    hh: '%d giờ',\r\n    d: 'một ngày',\r\n    dd: '%d ngày',\r\n    M: 'một tháng',\r\n    MM: '%d tháng',\r\n    y: 'một năm',\r\n    yy: '%d năm',\r\n  },\r\n  // dayOfMonthOrdinalParse: /\\d{1,2}(er|e)/,\r\n  // ordinal: function (number) {\r\n  //   return number + (number === 1 ? 'er' : 'e');\r\n  // },\r\n  // meridiemParse: /PD|MD/,\r\n  // isPM: function (input) {\r\n  //   return input.charAt(0) === 'M';\r\n  // },\r\n  // // In case the meridiem units are not separated around 12, then implement\r\n  // // this function (look at locale/id.js for an example).\r\n  // // meridiemHour : function (hour, meridiem) {\r\n  // //     return /* 0-23 hour, given meridiem token and hour 1-12 */ ;\r\n  // // },\r\n  // meridiem: function (hours, minutes, isLower) {\r\n  //   return hours < 12 ? 'PD' : 'MD';\r\n  // },\r\n  // week: {\r\n  //   dow: 1, // Monday is the first day of the week.\r\n  //   doy: 4, // Used to determine first week of the year.\r\n  // },\r\n});\r\n\r\nexport { moment };\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport { borderGrayColor } from 'style/variable';\r\n\r\nexport const styleCard = makeStyles({\r\n  parentCard: {\r\n    minWidth: 340,\r\n    maxWidth: 375,\r\n    margin: '10px 10px 0px 0px',\r\n    padding: 5,\r\n    border: `1px solid ${borderGrayColor}`,\r\n  },\r\n  time: {\r\n    color: 'rgb(97, 97, 97)',\r\n    marginBottom: 15,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n","import { initializeApp } from 'firebase/app';\r\nimport { getFirestore } from 'firebase/firestore';\r\n\r\n// Web app firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyBlJ9TInNrnT5KGtYtyJkFeBLVNqOccWiU',\r\n  authDomain: 'todo-list-firebase-271ad.firebaseapp.com',\r\n  databaseURL: 'https://todo-list-firebase-271ad-default-rtdb.firebaseio.com',\r\n  projectId: 'todo-list-firebase-271ad',\r\n  storageBucket: 'todo-list-firebase-271ad.appspot.com',\r\n  messagingSenderId: '118120703277',\r\n  appId: '1:118120703277:web:6026dc745e42a1db75dfa4',\r\n  measurementId: 'G-H3C6YR5B80',\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getFirestore(app);\r\n\r\n// Database name\r\nconst DATABASE_NAME = {\r\n  TASKS: 'tasks',\r\n  TODOS: 'todos',\r\n};\r\n\r\nexport { db, DATABASE_NAME };\r\n","import { typeTodoList } from 'module/page/main/redux/constance';\r\nimport { typeUser } from 'module/page/account/redux/constance';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const getMessStatus = (type) => {\r\n  switch (type) {\r\n    //type of actions todo list\r\n    case typeTodoList.GET_ALL_TASKS_SUCCEEDED:\r\n      return 'Successfully fetch all tasks';\r\n    case typeTodoList.GET_ALL_TASKS_FAILED:\r\n      return 'Failed fetch task';\r\n    case typeTodoList.ADD_TASK_SUCCEEDED:\r\n      return 'Successfully adding new task';\r\n    case typeTodoList.ADD_TASK_FAILED:\r\n      return 'Failed adding new task';\r\n    case typeTodoList.REMOVE_TASK_SUCCEEDED:\r\n      return 'Successfully removing new task';\r\n    case typeTodoList.REMOVE_TASK_FAILED:\r\n      return 'Failed removing new task';\r\n    case typeTodoList.UPDATE_TASK_SUCCEEDED:\r\n      return 'Successfully updating new task';\r\n    case typeTodoList.UPDATE_TASK_FAILED:\r\n      return 'Failed updating new task';\r\n    //type of action Authentication\r\n    case typeUser.SIGN_IN_SUCCEEDED:\r\n      return 'Successfully sign in';\r\n    case typeUser.SIGN_IN_FAILED:\r\n      return 'Failed sign in';\r\n    case typeUser.SIGN_UP_SUCCEEDED:\r\n      return 'Successfully sign up';\r\n    case typeUser.SIGN_UP_FAILED:\r\n      return 'Failed sign up';\r\n    case typeUser.SIGN_OUT_SUCCEEDED:\r\n      return 'Successfully sign out';\r\n    case typeUser.SIGN_OUT_FAILED:\r\n      return 'Failed sign out';\r\n    //type of action account\r\n    case typeUser.UPDATE_USER_SUCCEEDED:\r\n      return 'Successfully updating';\r\n    case typeUser.UPDATE_USER_FAILED:\r\n      return 'Failed updating';\r\n    default:\r\n      return 'Nothing';\r\n  }\r\n};\r\n\r\nexport const getKindOfToast = (type) => {\r\n  let isSuccessful = type.includes('SUCCEEDED');\r\n  let mess = getMessStatus(type);\r\n\r\n  return isSuccessful ? toast.success(mess) : toast.error(mess);\r\n};\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { moment } from 'momentCustom';\r\n//internal modules\r\nimport { actionOpenDialogEditTask } from 'common/dialog/redux/action';\r\nimport { actionRemoveTask } from 'module/page/main/redux/action';\r\nimport { actionUpdateTask } from 'module/page/main/redux/action';\r\nimport { typeTodoList } from 'module/page/main/redux/constance';\r\n//material-ui component\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n//internal modules\r\nimport { styleCard } from 'common/card/style';\r\n\r\n// Firebase\r\nimport { doc, updateDoc } from 'firebase/firestore';\r\nimport { db, DATABASE_NAME } from 'firebase';\r\n\r\n// helper\r\nimport { getKindOfToast } from 'helper/getKindOfToast';\r\n\r\nfunction CardTodo(props) {\r\n  //STATE\r\n  let {\r\n    title,\r\n    description,\r\n    completed,\r\n    updatedAt,\r\n    createdAt,\r\n    _id,\r\n    isDisplayRemoveButton,\r\n    isDisplayEditButton,\r\n    isDisplayDoneDraftButton,\r\n  } = props;\r\n  const classes = styleCard();\r\n  const dispatch = useDispatch();\r\n  const { token } = useSelector((state) => state.user);\r\n  let timeToFromNow = moment(createdAt).fromNow();\r\n\r\n  //METHOD\r\n  const handleRemoveTask = () => {\r\n    dispatch(actionRemoveTask(_id, token));\r\n  };\r\n\r\n  const handleSaveDraft = () => {\r\n    let taskUpdate = {\r\n      description: description + ' - done',\r\n    };\r\n\r\n    dispatch(actionUpdateTask(_id, taskUpdate, token));\r\n  };\r\n\r\n  const handleEditTask = () => {\r\n    let payload = {\r\n      _id,\r\n      description,\r\n      title,\r\n    };\r\n    dispatch(actionOpenDialogEditTask(payload));\r\n  };\r\n\r\n  const handleRemoveTodo = async () => {\r\n    await updateDoc(doc(db, DATABASE_NAME.TASKS, _id), {\r\n      removed: true,\r\n    });\r\n    getKindOfToast(typeTodoList.REMOVE_TASK_SUCCEEDED);\r\n  };\r\n\r\n  const handleEditTodo = async (payload) => {\r\n    await updateDoc(doc(db, DATABASE_NAME.TASKS, _id), {\r\n      completed: true,\r\n    });\r\n  };\r\n\r\n  //LIFECYCLE\r\n  return (\r\n    <Card className={classes.parentCard} variant=\"outlined\">\r\n      <CardContent>\r\n        {/* <Typography variant=\"h5\" component=\"h2\">\r\n          {title}\r\n        </Typography> */}\r\n        <Typography variant=\"h5\" component=\"p\">\r\n          {description}\r\n        </Typography>\r\n        <Typography className={classes.time} variant=\"subtitle2\" component=\"p\">\r\n          {timeToFromNow}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        {/* <Button size=\"small\">View detail</Button> */}\r\n        {isDisplayRemoveButton && (\r\n          <Button variant=\"outlined\" size=\"small\" onClick={handleRemoveTodo}>\r\n            XÓA\r\n          </Button>\r\n        )}\r\n\r\n        {isDisplayDoneDraftButton && (\r\n          <Button variant=\"outlined\" size=\"small\" onClick={handleEditTodo}>\r\n            XONG\r\n          </Button>\r\n        )}\r\n\r\n        {isDisplayEditButton && (\r\n          <Button variant=\"outlined\" size=\"small\" onClick={handleEditTask}>\r\n            SỬA\r\n          </Button>\r\n        )}\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default CardTodo;\r\n","import React, { useEffect, useCallback, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n// internal modules\r\nimport BodyContent from 'layout/body-content';\r\nimport {\r\n  actionGetAllTasks,\r\n  actionClearTypeTodoList,\r\n} from 'module/page/main/redux/action';\r\nimport { actionOpenDialogAddTask } from 'common/dialog/redux/action';\r\nimport { styleHome } from 'module/page/main/home/style';\r\n// internal component\r\nimport CardTodo from 'common/card/CardTodo';\r\n//material-ui component\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n//material-ui icons\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport MenuOutlinedIcon from '@material-ui/icons/MenuOutlined';\r\n\r\n// Firebase\r\nimport { collection, onSnapshot, query } from 'firebase/firestore';\r\nimport { db, DATABASE_NAME } from 'firebase';\r\n\r\nfunction Home() {\r\n  // STATE\r\n  const classes = styleHome();\r\n  const dispatch = useDispatch();\r\n  const { tasks } = useSelector((state) => state.todoList);\r\n  const { token } = useSelector((state) => state.user);\r\n  const typeToastOfTodoList = useSelector((state) => state.todoList.type);\r\n  const [isOpenSidebar, setIsOpenSidebar] = useState(false);\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  //METHOD\r\n  const handleChangeTab = (event, newValue) => {\r\n    setTabIndex(newValue);\r\n  };\r\n\r\n  const handleCreateNewTask = () => {\r\n    dispatch(actionOpenDialogAddTask());\r\n  };\r\n\r\n  const getAllTasks = () => {\r\n    dispatch(actionGetAllTasks(token));\r\n  };\r\n\r\n  const checkDoneTask = (descriptionTask) => {\r\n    const DONE_CONDITION = ' - done';\r\n    return descriptionTask && descriptionTask.includes(DONE_CONDITION);\r\n  };\r\n\r\n  const checkCompletedTodo = (isComplete) => {\r\n    return !!isComplete ? true : false;\r\n  };\r\n\r\n  const checkRemovedTodo = (isRemoved) => (!!isRemoved ? true : false);\r\n\r\n  const handleOpenSidebar = () => setIsOpenSidebar(true);\r\n  const handleCloseSidebar = () => setIsOpenSidebar(false);\r\n\r\n  //LIFECYCLE\r\n  // useEffect(() => {\r\n  //   !tasks && getAllTasks();\r\n  // }, [tasks]);\r\n\r\n  useEffect(() => {\r\n    !!typeToastOfTodoList && dispatch(actionClearTypeTodoList());\r\n  }, [typeToastOfTodoList]);\r\n\r\n  useEffect(() => {\r\n    const q = query(collection(db, DATABASE_NAME.TASKS));\r\n    onSnapshot(q, (querySnapshot) => {\r\n      let todosQuery = [];\r\n      querySnapshot.forEach((doc) => {\r\n        todosQuery.push({\r\n          ...doc.data(),\r\n          _id: doc.id,\r\n        });\r\n      });\r\n\r\n      setTodos(todosQuery);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <BodyContent\r\n      isOpenSidebar={isOpenSidebar}\r\n      handleCloseSidebar={handleCloseSidebar}\r\n    >\r\n      {/* header */}\r\n      <Box className={classes.titleShape}>\r\n        <Typography variant=\"h3\">\r\n          {/* Todo list for everyone, done right! */}\r\n          {/* Todo list for, Toi 💓 Nheo */}\r\n          Việc cần làm cho, Tới 💓 Nheo\r\n        </Typography>\r\n      </Box>\r\n      <Tabs\r\n        value={tabIndex}\r\n        onChange={handleChangeTab}\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n        centered\r\n      >\r\n        <Tab label=\"CẦN LÀM\" />\r\n        <Tab label=\"HOÀN THÀNH\" />\r\n      </Tabs>\r\n      {/* body */}\r\n      {tabIndex === 0 && (\r\n        <Box className={classes.body}>\r\n          {!!todos &&\r\n            todos.map(\r\n              (item, index) =>\r\n                !checkCompletedTodo(item?.completed) &&\r\n                !checkRemovedTodo(item?.removed) && (\r\n                  <CardTodo\r\n                    isDisplayEditButton\r\n                    isDisplayDoneDraftButton\r\n                    {...item}\r\n                    key={index}\r\n                  />\r\n                )\r\n            )}\r\n        </Box>\r\n      )}\r\n\r\n      {tabIndex === 1 && (\r\n        <Box className={classes.body}>\r\n          {!!todos &&\r\n            todos.map(\r\n              (item, index) =>\r\n                checkCompletedTodo(item?.completed) &&\r\n                !checkRemovedTodo(item?.removed) && (\r\n                  <CardTodo isDisplayRemoveButton {...item} key={index} />\r\n                )\r\n            )}\r\n        </Box>\r\n      )}\r\n\r\n      {/* footer */}\r\n      <IconButton\r\n        className={classes.buttonAdd}\r\n        aria-label=\"add\"\r\n        color=\"primary\"\r\n        onClick={handleCreateNewTask}\r\n      >\r\n        <AddCircleIcon fontSize=\"large\" />\r\n      </IconButton>\r\n      {/* <Pagination\r\n        className={classes.pagination}\r\n        count={10}\r\n        variant=\"outlined\"\r\n        shape=\"rounded\"\r\n      /> */}\r\n    </BodyContent>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import { typeTodoList } from 'module/page/main/redux/constance';\r\n\r\nexport const actionGetAllTasks = (token) => ({\r\n  type: typeTodoList.GET_ALL_TASKS,\r\n  token,\r\n});\r\nexport const actionAddNewTask = (bodyTask, token) => ({\r\n  type: typeTodoList.ADD_TASK,\r\n  bodyTask,\r\n  token,\r\n});\r\nexport const actionRemoveTask = (idTask, token) => ({\r\n  type: typeTodoList.REMOVE_TASK,\r\n  idTask,\r\n  token,\r\n});\r\nexport const actionUpdateTask = (idTask, taskUpdate, token) => ({\r\n  type: typeTodoList.UPDATE_TASK,\r\n  idTask,\r\n  taskUpdate,\r\n  token,\r\n});\r\nexport const actionClearTypeTodoList = () => ({\r\n  type: typeTodoList.CLEAR_TYPE_TODO_LIST,\r\n});\r\n","import React from 'react';\r\n\r\nfunction NotFound(props) {\r\n  return (\r\n    <div>\r\n      <h3>Not Found page</h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport { backgroundColorWhite, borderGrayColor } from 'style/variable';\r\n\r\nexport const userProfileStyle = makeStyles((them) => ({\r\n  root: {\r\n    width: '50%',\r\n    margin: '20px auto',\r\n    padding: '10px 20px',\r\n    borderRadius: '5px',\r\n    border: `1px solid ${borderGrayColor}`,\r\n    backgroundColor: backgroundColorWhite,\r\n    '& h3': {\r\n      fontSize: '18px',\r\n      fontWeight: 'bold',\r\n      margin: '20px 0',\r\n    },\r\n    '& h6': {\r\n      color: 'rgb(97, 97, 97)',\r\n      fontSize: '14px',\r\n    },\r\n    '& .MuiFormControl-root': {\r\n      display: 'block',\r\n      margin: '15px 0',\r\n    },\r\n    '& .MuiInputBase-root': {\r\n      width: '80%',\r\n    },\r\n  },\r\n  colorTitle: {\r\n    color: '#3f51b5',\r\n  },\r\n  buttonSave: {\r\n    marginBottom: 10,\r\n  },\r\n  wrapperUploadForm: {\r\n    padding: '0 10px',\r\n    margin: '20px 0',\r\n    display: 'flex',\r\n    alignItems: 'flex-end',\r\n  },\r\n  wrapperButtonUpload: {\r\n    maxWidth: '200px',\r\n    marginLeft: '20px',\r\n    '& > button': {\r\n      margin: '5px 0',\r\n    },\r\n  },\r\n}));\r\n","import React from 'react';\r\n// material-ui component\r\nimport Button from '@material-ui/core/Button';\r\n// material-UI icon\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\n\r\nfunction FileUploader(props) {\r\n  let { setSelectedFile } = props;\r\n  const hiddenFileInput = React.useRef(null);\r\n\r\n  const handleClick = (event) => {\r\n    hiddenFileInput.current.click();\r\n  };\r\n  const handleChange = (event) => {\r\n    //show corresponding image with what user chose\r\n    let reader = new FileReader();\r\n    reader.onload = function () {\r\n      let output = document.getElementById('outputUserProfile');\r\n      output.src = reader.result;\r\n    };\r\n    reader.readAsDataURL(event.target.files[0]);\r\n    setSelectedFile(event.target.files[0]);\r\n  };\r\n  return (\r\n    <div>\r\n      <Button\r\n        color=\"primary\"\r\n        size=\"small\"\r\n        variant=\"contained\"\r\n        startIcon={<CloudUploadIcon />}\r\n        onClick={handleClick}\r\n      >\r\n        Upload\r\n      </Button>\r\n      <input\r\n        type=\"file\"\r\n        onChange={handleChange}\r\n        ref={hiddenFileInput}\r\n        style={{ display: 'none' }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FileUploader;\r\n","import React, { useRef, useEffect, useState, useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n// internal modules\r\nimport BodyContent from 'layout/body-content';\r\nimport { userProfileStyle } from 'module/page/account/profile-user/style';\r\nimport {\r\n  actionUpdateUser,\r\n  actionClearUserType,\r\n  actionUpdateImage,\r\n} from 'module/page/account/redux/action';\r\nimport FileUploader from 'common/input-file';\r\n// material-UI components\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nfunction UserProfile() {\r\n  //STATE\r\n  const classes = userProfileStyle();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const informationUser = useSelector((state) => state.user.data);\r\n  const typeToastUser = useSelector((state) => state.user.type);\r\n  const { token } = useSelector((state) => state.user);\r\n  let inputNameRef = useRef();\r\n  let inputEmailRef = useRef();\r\n  let inputPasswordRef = useRef();\r\n  let inputPasswordConfirmRef = useRef();\r\n  let [selectedFile, setSelectedFile] = useState();\r\n\r\n  //METHOD\r\n  const handleGoBack = () => {\r\n    history.push('/');\r\n  };\r\n  const handleSave = () => {\r\n    let password = inputPasswordRef.current.value;\r\n    let confirmPassword = inputPasswordConfirmRef.current.value;\r\n    if (password === confirmPassword) {\r\n      // handle for information text\r\n      let informationUser = {\r\n        name: inputNameRef.current.value,\r\n        email: inputEmailRef.current.value,\r\n        password,\r\n      };\r\n      dispatch(actionUpdateUser(informationUser, token));\r\n\r\n      // handle for image\r\n      const formData = new FormData();\r\n      formData.append('avatar', selectedFile);\r\n      dispatch(actionUpdateImage(formData, token));\r\n    } else {\r\n      alert('Password must to similar, type again!');\r\n    }\r\n  };\r\n  const clearUserType = useCallback(() => {\r\n    !!typeToastUser && dispatch(actionClearUserType());\r\n  }, [dispatch, typeToastUser]);\r\n\r\n  //LIFECYCLE\r\n  useEffect(() => {\r\n    clearUserType();\r\n  }, [clearUserType]);\r\n\r\n  return (\r\n    <BodyContent>\r\n      <Box className={classes.root}>\r\n        <Typography variant=\"h3\" className={classes.colorTitle}>\r\n          EDIT INFORMATION\r\n        </Typography>\r\n        <Box className={classes.wrapperUploadForm}>\r\n          <img\r\n            id=\"outputUserProfile\"\r\n            alt=\"profile user\"\r\n            height=\"170px\"\r\n            width=\"160px\"\r\n          />\r\n          <Box className={classes.wrapperButtonUpload}>\r\n            <FileUploader setSelectedFile={setSelectedFile} />\r\n            <Typography variant=\"subtitle2\">\r\n              Acceptable format jpg, png. And max file size is 500kb\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n        <Typography variant=\"h3\">ACCOUNT INFORMATION</Typography>\r\n\r\n        <form>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            label=\"Full name\"\r\n            defaultValue={informationUser.name}\r\n            inputRef={inputNameRef}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            label=\"Email\"\r\n            defaultValue={informationUser.email}\r\n            inputRef={inputEmailRef}\r\n          />\r\n        </form>\r\n        <Typography variant=\"h3\">CHANGE PASSWORD</Typography>\r\n        <form>\r\n          {/* <TextField\r\n            type=\"password\"\r\n            label=\"Current Password\"\r\n            autoComplete=\"current-password\"\r\n            variant=\"outlined\"\r\n          /> */}\r\n          <TextField\r\n            type=\"password\"\r\n            label=\"New Password\"\r\n            variant=\"outlined\"\r\n            inputRef={inputPasswordRef}\r\n          />\r\n          <TextField\r\n            type=\"password\"\r\n            label=\"Confirm Password\"\r\n            variant=\"outlined\"\r\n            inputRef={inputPasswordConfirmRef}\r\n          />\r\n        </form>\r\n        <Button\r\n          className={classes.buttonSave}\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          onClick={handleSave}\r\n        >\r\n          Save\r\n        </Button>\r\n        <br />\r\n        <Button variant=\"outlined\" color=\"default\" onClick={handleGoBack}>\r\n          Back\r\n        </Button>\r\n      </Box>\r\n    </BodyContent>\r\n  );\r\n}\r\n\r\nexport default UserProfile;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const signInStyle = makeStyles((them) => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '100vh',\r\n  },\r\n  boxSignIn: {\r\n    width: '50%',\r\n    padding: '40px 100px',\r\n    border: '1px solid #eaeaea',\r\n    boxShadow: '0 25px 50px -12px #b2b2b2',\r\n    borderRadius: '5px',\r\n  },\r\n  title: {\r\n    marginBottom: '20px',\r\n  },\r\n  subTitle1: {\r\n    fontWeight: 'bold',\r\n    fontSize: '18px',\r\n    margin: '25px 0',\r\n  },\r\n  subTitle2: {\r\n    color: 'rgb(97, 97, 97)',\r\n    fontSize: '14px',\r\n    '& a': {\r\n      textDecoration: 'none',\r\n    },\r\n  },\r\n  gitHubButton: {\r\n    color: 'white',\r\n    backgroundColor: 'black',\r\n    minWidth: '100px',\r\n    padding: '12px 30px',\r\n    marginRight: '5px',\r\n  },\r\n  linkedInButton: {\r\n    minWidth: '100px',\r\n    padding: '12px 30px',\r\n    margin: '5px',\r\n    backgroundColor: '#0077b5',\r\n    color: 'white',\r\n  },\r\n  facebookButton: {\r\n    minWidth: '100px',\r\n    padding: '12px 30px',\r\n    margin: '5px',\r\n  },\r\n  submitButton: {\r\n    fontWeight: 'bold',\r\n    margin: '15px 0px 50px 0px',\r\n  },\r\n  signInForm: {\r\n    '& > div': {\r\n      margin: '5px 0',\r\n      width: '100%',\r\n    },\r\n  },\r\n}));\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\nimport { NavLink } from 'react-router-dom';\r\n// internal modules\r\nimport {\r\n  actionSignIn,\r\n  actionClearUserType,\r\n  mockActionSignInSuccess,\r\n} from 'module/page/account/redux/action';\r\nimport logo from 'assets/images/logo1.png';\r\nimport { signInStyle } from 'module/page/account/sign-in/style';\r\n// material-UI component\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\n// material-UI icon\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\n\r\nfunction SignIn() {\r\n  // STATE\r\n  const classes = signInStyle();\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const { isAuthenticated } = useSelector((state) => state.user);\r\n  const typeToastUser = useSelector((state) => state.user.type);\r\n  let inputEmailRef = useRef();\r\n  let inputPasswordRef = useRef();\r\n  const [isError, setIsError] = useState();\r\n\r\n  //METHOD\r\n  const handleSignIn = () => {\r\n    let account = {\r\n      email: inputEmailRef.current.value,\r\n      password: inputPasswordRef.current.value,\r\n    };\r\n    // dispatch(actionSignIn(account));\r\n\r\n    // TODO: need to handle signIn here\r\n    dispatch(mockActionSignInSuccess());\r\n  };\r\n\r\n  const validateEmail = (event) => {\r\n    let v = event.target.value;\r\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\r\n      v\r\n    )\r\n      ? setIsError(false)\r\n      : setIsError(true);\r\n  };\r\n\r\n  // LIFECYCLE\r\n  useEffect(() => {\r\n    isAuthenticated &&\r\n      (location.state ? history.push(location.state) : history.push('/'));\r\n  }, [isAuthenticated, location.state, history]);\r\n  useEffect(() => {\r\n    typeToastUser && dispatch(actionClearUserType());\r\n  }, [typeToastUser, dispatch]);\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Box className={classes.boxSignIn}>\r\n        <Box className={classes.title}>\r\n          <img src={logo} alt=\"hi\" height=\"50px\" width=\"200px\" />\r\n        </Box>\r\n        <Typography\r\n          className={classes.subTitle1}\r\n          variant=\"subtitle1\"\r\n          gutterBottom\r\n        >\r\n          Sign in with your account\r\n        </Typography>\r\n        <Typography\r\n          className={classes.subTitle2}\r\n          variant=\"subtitle2\"\r\n          gutterBottom\r\n        >\r\n          Sign in using a secure email\r\n        </Typography>\r\n        <form>\r\n          <Box className={classes.signInForm}>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Enter your email address\"\r\n              type=\"email\"\r\n              variant=\"outlined\"\r\n              inputRef={inputEmailRef}\r\n              error={isError}\r\n              helperText={isError ? 'Incorrect email type' : ''}\r\n              onChange={validateEmail}\r\n            />\r\n            <br />\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Your password\"\r\n              type=\"password\"\r\n              variant=\"outlined\"\r\n              inputRef={inputPasswordRef}\r\n            />\r\n          </Box>\r\n        </form>\r\n        <Button\r\n          className={classes.submitButton}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          // onClick={handleSignIn}\r\n          disabled={isError}\r\n        >\r\n          Submit\r\n        </Button>\r\n        <Typography\r\n          className={classes.subTitle2}\r\n          variant=\"subtitle1\"\r\n          gutterBottom\r\n        >\r\n          <NavLink to=\"/signUp\">Create new account</NavLink>, or connect with\r\n          application\r\n        </Typography>\r\n        <Button\r\n          className={classes.gitHubButton}\r\n          variant=\"contained\"\r\n          color=\"default\"\r\n          startIcon={<GitHubIcon />}\r\n        >\r\n          Github\r\n        </Button>\r\n        <Button\r\n          className={classes.linkedInButton}\r\n          variant=\"contained\"\r\n          startIcon={<LinkedInIcon />}\r\n          onClick={handleSignIn}\r\n        >\r\n          LinkedIn\r\n        </Button>\r\n        <Button\r\n          className={classes.facebookButton}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<FacebookIcon />}\r\n        >\r\n          Facebook\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const signUpStyle = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '100vh',\r\n  },\r\n  boxSignUp: {\r\n    width: '50%',\r\n    padding: '40px 100px',\r\n    border: '1px solid #eaeaea',\r\n    boxShadow: '0 25px 50px -12px #b2b2b2',\r\n    borderRadius: '5px',\r\n  },\r\n\r\n  title: {\r\n    marginBottom: '20px',\r\n  },\r\n  subTitle1: {\r\n    fontWeight: 'bold',\r\n    fontSize: '18px',\r\n    margin: '25px 0',\r\n  },\r\n  subTitle2: {\r\n    color: 'rgb(97, 97, 97)',\r\n    fontSize: '14px',\r\n    '& a': {\r\n      textDecoration: 'none',\r\n    },\r\n  },\r\n  submitButton: {\r\n    fontWeight: 'bold',\r\n    margin: '15px 0px 10px 0px',\r\n  },\r\n  signInForm: {\r\n    '& > div': {\r\n      margin: '5px 0',\r\n      width: '100%',\r\n    },\r\n  },\r\n}));\r\n","import React, { useRef, useEffect } from 'react';\r\nimport { NavLink, useHistory, useLocation } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// internal modules\r\nimport { signUpStyle } from 'module/page/account/sign-up/style';\r\nimport logo from 'assets/images/logo1.png';\r\nimport { actionSignUp } from 'module/page/account/redux/action';\r\nimport { actionClearUserType } from 'module/page/account/redux/action';\r\n// material-UI component\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction SignUp() {\r\n  //STATE\r\n  const classes = signUpStyle();\r\n  const dispatch = useDispatch();\r\n  const typeToastUser = useSelector((state) => state.user.type);\r\n  const { isAuthenticated } = useSelector((state) => state.user);\r\n  let inputNameRef = useRef();\r\n  let inputEmailRef = useRef();\r\n  let inputPasswordRef = useRef();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  //METHOD\r\n  const handleSignUp = () => {\r\n    let body = {\r\n      name: inputNameRef.current.value,\r\n      email: inputEmailRef.current.value,\r\n      password: inputPasswordRef.current.value,\r\n    };\r\n    dispatch(actionSignUp(body));\r\n  };\r\n  //LIFECYCLE\r\n  useEffect(() => {\r\n    typeToastUser && dispatch(actionClearUserType());\r\n  }, [typeToastUser, dispatch]);\r\n\r\n  useEffect(() => {\r\n    isAuthenticated &&\r\n      (location.state ? history.push(location.state) : history.push('/'));\r\n  }, [isAuthenticated, history, location.state]);\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Box className={classes.boxSignUp} maxWidth=\"sm\">\r\n        <Box className={classes.title}>\r\n          <img src={logo} alt=\"hi\" height=\"50px\" width=\"200px\" />\r\n        </Box>\r\n        <Typography\r\n          className={classes.subTitle1}\r\n          variant=\"subtitle1\"\r\n          gutterBottom\r\n        >\r\n          Create an account\r\n        </Typography>\r\n        <Typography\r\n          className={classes.subTitle2}\r\n          variant=\"subtitle2\"\r\n          gutterBottom\r\n        >\r\n          Register new your account\r\n        </Typography>\r\n        <form>\r\n          <Box className={classes.signInForm}>\r\n            <TextField\r\n              type=\"text\"\r\n              id=\"outlined-basic\"\r\n              label=\"Enter your name\"\r\n              variant=\"outlined\"\r\n              inputRef={inputNameRef}\r\n            />\r\n            <TextField\r\n              type=\"email\"\r\n              id=\"outlined-basic\"\r\n              label=\"Enter your email\"\r\n              variant=\"outlined\"\r\n              inputRef={inputEmailRef}\r\n            />\r\n            <TextField\r\n              type=\"password\"\r\n              id=\"outlined-basic\"\r\n              label=\"Enter password\"\r\n              variant=\"outlined\"\r\n              inputRef={inputPasswordRef}\r\n            />\r\n          </Box>\r\n        </form>\r\n        <Button\r\n          className={classes.submitButton}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={handleSignUp}\r\n        >\r\n          Submit\r\n        </Button>\r\n        <Typography\r\n          className={classes.subTitle2}\r\n          variant=\"subtitle1\"\r\n          gutterBottom\r\n        >\r\n          <NavLink to=\"/signIn\">I already had an account</NavLink>\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","import Home from 'module/page/main/home';\r\nimport NotFound from 'module/page/error';\r\nimport UserProfile from 'module/page/account/profile-user';\r\nimport SignIn from 'module/page/account/sign-in';\r\nimport SignUp from 'module/page/account/sign-up';\r\n\r\nexport const publicRoutes = [\r\n  {\r\n    path: '/signIn',\r\n    component: SignIn,\r\n    exact: true,\r\n  },\r\n  {\r\n    path: '/signUp',\r\n    component: SignUp,\r\n  },\r\n];\r\n\r\nexport const privateRoutes = [\r\n  {\r\n    path: '/userProfile',\r\n    component: UserProfile,\r\n  },\r\n  {\r\n    path: '/',\r\n    component: Home,\r\n    exact: true,\r\n  },\r\n  {\r\n    path: '*',\r\n    component: NotFound,\r\n  },\r\n];\r\n","const getRandomNumber = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n};\r\n\r\nexport { getRandomNumber };\r\n","import React from 'react';\r\n\r\nfunction Footer(props) {\r\n  return (\r\n    <footer style={{ backgroundColor: 'red', minHeight: '5vh' }}>Footer</footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","export default __webpack_public_path__ + \"static/media/bg-image-1.210910ce.png\";","export default __webpack_public_path__ + \"static/media/bg-image-2.56602a68.png\";","export default __webpack_public_path__ + \"static/media/bg-image-3.395b11a2.png\";","export default __webpack_public_path__ + \"static/media/bg-image-4.c4e36a5f.png\";","export default __webpack_public_path__ + \"static/media/bg-image-5.d5192023.png\";","export default __webpack_public_path__ + \"static/media/bg-image-6.7de3183c.png\";","import React, { useEffect, useState } from 'react';\r\n\r\n// helpers\r\nimport { getRandomNumber } from 'helper/utilities';\r\n\r\n//internal\r\nimport Header from 'layout/header';\r\nimport Footer from 'layout/footer';\r\nimport { backgroundColorLightGray } from 'style/variable';\r\nimport bg1 from '../assets/images/profile-user/bg-image-1.png';\r\nimport bg2 from '../assets/images/profile-user/bg-image-2.png';\r\nimport bg3 from '../assets/images/profile-user/bg-image-3.png';\r\nimport bg4 from '../assets/images/profile-user/bg-image-4.png';\r\nimport bg5 from '../assets/images/profile-user/bg-image-5.png';\r\nimport bg6 from '../assets/images/profile-user/bg-image-6.png';\r\n\r\nfunction LayoutBody(props) {\r\n  const listBackground = [bg1, bg2, bg3, bg4, bg5, bg6];\r\n  const DELAY_TIME_CHANGING_BACKGROUND = 5000;\r\n  const [backgroundImg, setBackgroundImg] = useState('');\r\n\r\n  // change random background image after each 5 seconds\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const randomIndex = getRandomNumber(0, listBackground.length - 1);\r\n\r\n      setBackgroundImg(listBackground[randomIndex]);\r\n    }, DELAY_TIME_CHANGING_BACKGROUND);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Init random background image\r\n  useEffect(() => {\r\n    const randomIndex = getRandomNumber(0, listBackground.length - 1);\r\n\r\n    setBackgroundImg(listBackground[randomIndex]);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {/* <Header /> */}\r\n      <main\r\n        style={{\r\n          minHeight: '100vh',\r\n          // backgroundColor: backgroundColorLightGray,\r\n          backgroundImage: `url('${backgroundImg}')`,\r\n          backgroundRepeat: 'no-repeat',\r\n          backgroundSize: 'cover',\r\n          backgroundPosition: 'center',\r\n        }}\r\n      >\r\n        {props.children}\r\n      </main>\r\n      {/* <Footer /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LayoutBody;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction PrivateRoute(props) {\r\n  const { component: Component, path, exact, ...rest } = props;\r\n\r\n  let { isAuthenticated } = useSelector((state) => state.user);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      exact\r\n      render={(props) =>\r\n        isAuthenticated ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: '/signIn',\r\n              state: path,\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    ></Route>\r\n  );\r\n}\r\nexport default PrivateRoute;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n// internal modules\r\nimport { privateRoutes, publicRoutes } from 'constance/routes';\r\n// internal component\r\nimport LayoutBody from 'layout';\r\nimport PrivateRoute from 'router/PrivateRoute';\r\n\r\nfunction WrapRouter() {\r\n  return (\r\n    <LayoutBody>\r\n      <Switch>\r\n        {publicRoutes.map((item, index) => (\r\n          <Route key={index} {...item} />\r\n        ))}\r\n        {privateRoutes.map((item, index) => (\r\n          <PrivateRoute key={index} {...item} />\r\n        ))}\r\n      </Switch>\r\n    </LayoutBody>\r\n  );\r\n}\r\n\r\nexport default WrapRouter;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n//toast modules\r\nimport { ToastContainer, Flip } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n//internal modules\r\nimport { getKindOfToast } from 'helper/getKindOfToast';\r\n\r\nfunction MyToast() {\r\n  // STATE\r\n  const typeUser = useSelector((state) => state.user.type);\r\n  const typeTodo = useSelector((state) => state.todoList.type);\r\n  let type = typeUser || typeTodo;\r\n  let configPositionToast = {\r\n    position: 'top-right',\r\n    autoClose: 500,\r\n    transition: Flip,\r\n    hideProgressBar: false,\r\n    newestOnTop: false,\r\n    closeOnClick: true,\r\n    rtl: false,\r\n    pauseOnFocusLoss: true,\r\n    draggable: true,\r\n    pauseOnHover: true,\r\n  };\r\n  // LIFECYCLE\r\n  useEffect(() => {\r\n    type && getKindOfToast(type);\r\n  }, [type]);\r\n  return <ToastContainer {...configPositionToast} />;\r\n}\r\n\r\nexport default MyToast;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nfunction LoadingIcon() {\r\n  const isLoadingUser = useSelector((state) => state.user.request);\r\n  const isLoadingTodo = useSelector((state) => state.todoList.request);\r\n  const isLoading = isLoadingUser || isLoadingTodo;\r\n\r\n  const styleLoading = {\r\n    wrapperLoading: {\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 0,\r\n      backgroundColor: 'rgba(97, 97, 97, 0.1)',\r\n      padding: '45vh 45vw',\r\n      height: '100vh',\r\n      width: '100vw',\r\n      boxSizing: 'border-box',\r\n    },\r\n    iconLoading: {\r\n      height: 100,\r\n      width: 100,\r\n    },\r\n  };\r\n  return (\r\n    <div>\r\n      {isLoading && (\r\n        <div style={styleLoading.wrapperLoading}>\r\n          {' '}\r\n          <div style={styleLoading.iconLoading}>\r\n            <CircularProgress />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoadingIcon;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport { titleColorGray } from 'style/variable';\r\n\r\nexport const styleDialog = makeStyles({\r\n  root: {\r\n    margin: 0,\r\n    '& button': {\r\n      margin: '10px 10px 10px 0px',\r\n    },\r\n  },\r\n  formDialog: {\r\n    '& > div': {\r\n      marginBottom: 10,\r\n    },\r\n  },\r\n  title: {\r\n    fontWeight: 'bold',\r\n    color: titleColorGray,\r\n    fontSize: 20,\r\n  },\r\n});\r\n","import React, { useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n//internal modules\r\nimport { actionCloseDialog } from 'common/dialog/redux/action';\r\nimport { styleDialog } from 'common/dialog/component/style';\r\nimport { actionAddNewTask } from 'module/page/main/redux/action';\r\nimport { typeTodoList } from 'module/page/main/redux/constance';\r\n//material-ui component\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n// Firebase\r\nimport { addDoc, collection } from 'firebase/firestore';\r\nimport { db, DATABASE_NAME } from 'firebase';\r\n\r\n// helper\r\nimport { getKindOfToast } from 'helper/getKindOfToast';\r\n\r\nfunction DialogAddTask() {\r\n  //STATE\r\n  const classes = styleDialog();\r\n  const dispatch = useDispatch();\r\n  const { token } = useSelector((state) => state.user);\r\n  let inputDescriptionRef = useRef();\r\n  let inputTitleRef = useRef();\r\n\r\n  //METHOD\r\n  const handleClose = () => {\r\n    dispatch(actionCloseDialog());\r\n  };\r\n  const handleSave = () => {\r\n    let body = {\r\n      description: inputDescriptionRef.current.value,\r\n    };\r\n    dispatch(actionAddNewTask(body, token));\r\n    handleClose();\r\n  };\r\n  const handleCancel = () => {\r\n    handleClose();\r\n  };\r\n\r\n  const handleAddTodo = async (event) => {\r\n    const newTodo = {\r\n      description: inputDescriptionRef.current.value,\r\n      completed: false,\r\n      createdAt: Date.now(),\r\n    };\r\n\r\n    handleClose();\r\n    await addDoc(collection(db, DATABASE_NAME.TASKS), newTodo);\r\n    getKindOfToast(typeTodoList.ADD_TASK_SUCCEEDED);\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n        <Typography className={classes.title}>THÊM MỚI</Typography>\r\n      </DialogTitle>\r\n      <DialogContent dividers>\r\n        <form className={classes.formDialog}>\r\n          {/* <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Title of task\"\r\n            type=\"text\"\r\n            variant=\"outlined\"\r\n            inputRef={inputTitleRef}\r\n            fullWidth\r\n          /> */}\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Mô tả\"\r\n            type=\"text\"\r\n            variant=\"outlined\"\r\n            inputRef={inputDescriptionRef}\r\n            fullWidth\r\n          />\r\n        </form>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleCancel} color=\"secondary\" variant=\"outlined\">\r\n          HỦY\r\n        </Button>\r\n        <Button onClick={handleAddTodo} color=\"primary\" variant=\"outlined\">\r\n          LƯU\r\n        </Button>\r\n      </DialogActions>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default DialogAddTask;\r\n","import React, { useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n//internal modules\r\nimport { actionCloseDialog } from 'common/dialog/redux/action';\r\nimport { styleDialog } from 'common/dialog/component/style';\r\nimport { actionUpdateTask } from 'module/page/main/redux/action';\r\nimport { typeTodoList } from 'module/page/main/redux/constance';\r\n//material-ui component\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n// Firebase\r\nimport { doc, updateDoc } from 'firebase/firestore';\r\nimport { db, DATABASE_NAME } from 'firebase';\r\n\r\n// helper\r\nimport { getKindOfToast } from 'helper/getKindOfToast';\r\nfunction DialogAddTask() {\r\n  //STATE\r\n  const classes = styleDialog();\r\n  const dispatch = useDispatch();\r\n  const { token } = useSelector((state) => state.user);\r\n  const { _id, description, title } = useSelector(\r\n    (state) => state.dialog.state\r\n  );\r\n  let inputDescriptionRef = useRef();\r\n  let inputTitleRef = useRef();\r\n\r\n  //METHOD\r\n  const handleClose = () => {\r\n    dispatch(actionCloseDialog());\r\n  };\r\n  const handleSave = () => {\r\n    let taskUpdate = {\r\n      description: inputDescriptionRef.current.value,\r\n    };\r\n    dispatch(actionUpdateTask(_id, taskUpdate, token));\r\n    handleClose();\r\n  };\r\n  const handleCancel = () => {\r\n    handleClose();\r\n  };\r\n\r\n  const handleEditTodo = async (payload) => {\r\n    const taskUpdated = {\r\n      description: inputDescriptionRef.current.value,\r\n    };\r\n\r\n    handleClose();\r\n    await updateDoc(doc(db, DATABASE_NAME.TASKS, _id), taskUpdated);\r\n    getKindOfToast(typeTodoList.UPDATE_TASK_SUCCEEDED);\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n        <Typography className={classes.title}>SỬA</Typography>\r\n      </DialogTitle>\r\n      <DialogContent dividers>\r\n        <form className={classes.formDialog}>\r\n          {/* <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Title of task\"\r\n            type=\"text\"\r\n            variant=\"outlined\"\r\n            defaultValue={title}\r\n            inputRef={inputTitleRef}\r\n            fullWidth\r\n          /> */}\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Description of task\"\r\n            type=\"text\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            defaultValue={description}\r\n            inputRef={inputDescriptionRef}\r\n          />\r\n        </form>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleCancel} color=\"secondary\" variant=\"outlined\">\r\n          HỦY\r\n        </Button>\r\n        <Button onClick={handleEditTodo} color=\"primary\" variant=\"outlined\">\r\n          LƯU\r\n        </Button>\r\n      </DialogActions>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default DialogAddTask;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n//internal modules\r\nimport { actionCloseDialog } from 'common/dialog/redux/action';\r\nimport { typeDialog } from 'common/dialog/redux/constance';\r\n//internal component\r\nimport DialogAddTask from 'common/dialog/component/DialogAddTask';\r\nimport DialogEditTask from 'common/dialog/component/DialogEditTask';\r\n//material-ui components\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nfunction DialogControl() {\r\n  //STATE\r\n  const { kindOfDialog, isOpen } = useSelector((state) => state.dialog);\r\n  const dispatch = useDispatch();\r\n\r\n  //METHOD\r\n  const handleClose = () => {\r\n    dispatch(actionCloseDialog());\r\n  };\r\n  const showBodyDialog = () => {\r\n    switch (kindOfDialog) {\r\n      case typeDialog.ADD_TASK_DIALOG:\r\n        return <DialogAddTask />;\r\n      case typeDialog.EDIT_TASK_DIALOG:\r\n        return <DialogEditTask />;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        onClose={handleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={isOpen}\r\n        fullWidth\r\n        maxWidth=\"md\"\r\n      >\r\n        {showBodyDialog()}\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\nexport default DialogControl;\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { store, persistor } from 'store/store';\r\nimport { PersistGate } from 'redux-persist/lib/integration/react';\r\n// internal component\r\nimport WrapRouter from 'router/WrapRouter';\r\nimport MyToast from 'common/toast';\r\nimport LoadingIcon from 'common/loading';\r\nimport DialogControl from 'common/dialog/component/DialogControl';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Provider store={store}>\r\n        <PersistGate loading={<LoadingIcon />} persistor={persistor}>\r\n          <WrapRouter />\r\n          <MyToast />\r\n          <LoadingIcon />\r\n          <DialogControl />\r\n        </PersistGate>\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}